[gd_scene load_steps=11 format=2]

[ext_resource path="res://Entities/Entity/Entity.tscn" type="PackedScene" id=1]
[ext_resource path="res://Entities/NPC/Enemies/Rook/EnemyRookSprites.tres" type="SpriteFrames" id=2]
[ext_resource path="res://Entities/NPC/Enemies/Rook/EnemyRookShape.tres" type="Shape2D" id=3]
[ext_resource path="res://Entities/NPC/Enemies/Rook/EnemyRook.gd" type="Script" id=4]
[ext_resource path="res://Entities/NPC/Enemies/Rook/triGun.gd" type="Script" id=5]
[ext_resource path="res://Sound/SFX/General/enemyexplosion2.ogg" type="AudioStream" id=6]
[ext_resource path="res://Sound/SFX/General/enemyhit3.ogg" type="AudioStream" id=7]

[sub_resource type="Animation" id=2]
resource_name = "RESET"
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("EntityCollisionDetector:monitoring")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("EntitySprite:animation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ "rook" ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("EntitySprite:scale")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("EntitySprite:position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("AudioStreamPlayer2D:stream")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ null ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("AudioStreamPlayer2D:playing")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("AudioStreamPlayer2D:volume_db")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}

[sub_resource type="Animation" id=3]
resource_name = "die"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("EntityCollisionDetector:monitoring")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("EntityCollisionDetector:monitorable")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("EntitySprite:animation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.05 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ "rook", "explode" ]
}
tracks/3/type = "method"
tracks/3/path = NodePath(".")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0.5 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "queue_free"
} ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("EntitySprite:scale")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 1, 1 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.1, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath(".:rotation_degrees")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ -5.0, 0.0, 5.0, 0.5, 5.0, -2.0, 2.0, -2.0, 0.0 ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("EntitySprite:position")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15, 0.2, 0.25 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( -1, -1 ), Vector2( 1, 1 ), Vector2( 1, -1 ), Vector2( -1, 1 ), Vector2( 0, 0 ) ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("AudioStreamPlayer2D:stream")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ ExtResource( 6 ), null ]
}
tracks/9/type = "value"
tracks/9/path = NodePath("AudioStreamPlayer2D:playing")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}

[sub_resource type="Animation" id=1]
resource_name = "hit"
length = 0.25
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.2, 0.25 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 0.760784, 0.760784, 1 ), Color( 1, 0.760784, 0.760784, 1 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.05, 0.2, 0.25 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, -5.0, 5.0, 0.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AudioStreamPlayer2D:stream")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.25 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ ExtResource( 7 ), null ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("AudioStreamPlayer2D:playing")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.25 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("AudioStreamPlayer2D:volume_db")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.25 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.5, 0.0 ]
}

[node name="EnemyRook" instance=ExtResource( 1 )]
z_index = 2
script = ExtResource( 4 )
health = 15
scoreValue = 30

[node name="EntityCollisionDetector" parent="." index="0"]
collision_layer = 2
collision_mask = 18
monitorable = false

[node name="EntityPhysicsShape" parent="EntityCollisionDetector" index="0"]
position = Vector2( 0, 7.25 )
shape = ExtResource( 3 )

[node name="EntitySprite" parent="." index="1"]
frames = ExtResource( 2 )
animation = "rook"

[node name="AnimationPlayer" parent="." index="2"]
anims/RESET = SubResource( 2 )
anims/die = SubResource( 3 )
anims/hit = SubResource( 1 )

[node name="VisibilityNotifier2D" type="VisibilityNotifier2D" parent="." index="3"]
position = Vector2( 0, 70 )

[node name="Gun" type="Node2D" parent="." index="4"]

[node name="gunTimer" type="Timer" parent="Gun" index="0"]

[node name="triGun" type="Node2D" parent="Gun" index="1"]
script = ExtResource( 5 )

[node name="Spawners" type="Node2D" parent="Gun/triGun" index="0"]

[node name="leftGun" type="Position2D" parent="Gun/triGun/Spawners" index="0"]
position = Vector2( -26, 33 )

[node name="middleGun" type="Position2D" parent="Gun/triGun/Spawners" index="1"]
position = Vector2( 0, 72 )

[node name="rightGun" type="Position2D" parent="Gun/triGun/Spawners" index="2"]
position = Vector2( 26, 33 )

[node name="RichTextLabel" type="RichTextLabel" parent="." index="5"]
visible = false
margin_left = 35.0
margin_top = -74.0
margin_right = 75.0
margin_bottom = -34.0

[node name="AudioStreamPlayer2D" parent="." index="6"]
stream = ExtResource( 7 )

[connection signal="area_entered" from="EntityCollisionDetector" to="." method="_on_EntityCollisionDetector_area_entered"]
[connection signal="screen_entered" from="VisibilityNotifier2D" to="." method="_on_VisibilityNotifier2D_screen_entered"]
[connection signal="timeout" from="Gun/gunTimer" to="Gun/triGun" method="_on_gunTimer_timeout"]
